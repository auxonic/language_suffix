<?php
/**
 * @file language_suffix.module
 * 
 * Adds a language selector based on the suffix rather than the standard prefex. 
 * Module is designed specifcally to work with VMC/MVC rules
 */

/**
 * Implements hook_help().
 */
function language_suffix_help($path, $arg) {
  switch ($path) {
    case 'admin/help#language_suffix':
      return t("When enabled this module will select the language based on a suffix rather than prefix.");
  }
}
  
/**
* Implements hook_language_negotiation_info().
*/
function language_suffix_language_negotiation_info() {
 return array(
    'language_suffixuage_provider' => array(
      'callbacks' => array(
        'language' => 'language_suffix_language_getter',
        'switcher' => 'language_suffix_language_switcher_url',
        'url_rewrite' => 'language_suffix_url_rewriter',
      ),
      'file' => drupal_get_path('module', 'language_suffix') . '/language_suffix.inc',
      'weight' => -10,
      'types' => array(LANGUAGE_TYPE_CONTENT, LANGUAGE_TYPE_INTERFACE, LANGUAGE_TYPE_URL),
      'name' => t('MVC path suffix'),
      'description' => t('Determine the country & language from the URL - path suffix.'),
    ),
  );
}
/*
/**
 * Perform alterations on language providers.
 * hook_language_negotiation_info_alter
 *
 * @param $language_providers
 *   Array of language provider definitions.
 */
function language_suffix_language_negotiation_info_alter(array &$language_providers) {
  if (isset($language_providers['language-selection-page'])) {
    $language_providers['language-selection-page']['callbacks']['switcher'] = 'language_suffix_language_switcher_url';
    $language_providers['language-selection-page']['callbacks']['url_rewrite'] = 'language_suffix_url_rewriter';
  }
}